❯ python manage.py shell
Python 3.10.0 (v3.10.0:b494f5935c, Oct  4 2021, 14:59:20) [Clang 12.0.5 (clang-1205.0.22.11)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from News.models import *
>>> user_1 = User.objects.create_user(username = 'Anton')
>>> user_2 = User.objects.create_user(username = 'Vadim')
>>> Author.objects.create(authorUser = user_1)
<Author: Author object (1)>
>>> Author.objects.create(authorUser = user_2)
<Author: Author object (2)>
>>> Category.objects.create(name = 'Auto')
<Category: Category object (1)>
>>> Category.objects.create(name = 'Science')
<Category: Category object (2)>
>>> Category.objects.create(name = 'IT')
<Category: Category object (3)>
>>> Category.objects.create(name = 'Music')
<Category: Category object (4)>
>>> author_1 = Author.objects.get(id=1)
>>> author_2 = Author.objects.get(id=2)
>>> Post.objects.create(author = author_1, categoryType = 'AR', title = 'Something about music in car', text = 'Article about car audio')
<Post: Post object (1)>
>>> Post.objects.create(author = author_2, categoryType = 'AR', title = 'Something about IT in science', text = 'An article about something interesting')
<Post: Post object (2)>
>>> Post.objects.create(author = author_2, categoryType = 'NW', title = 'Breaking news', text = 'News about something interesting')
<Post: Post object (3)>
>>> Post.objects.get(id=1).title
'Something about music in car'
>>> Post.objects.get(id=1).author
<Author: Author object (1)>
>>> Post.objects.get(id=1).author
<Author: Author object (1)>
>>> Comment.objects.create(commentPost = Post.objects.get(id=1),commentUser = Author.objects.get(id=2).authorUser, text= 'first comment')
<Comment: Comment object (1)>
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2))
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=4))
>>> Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3))
>>> Post.objects.get(id=3).postCategory.add(Category.objects.get(id=3))
>>> Comment.objects.create(commentPost = Post.objects.get(id=1),commentUser = Author.objects.get(id=1).authorUser, text = 'first comment')
<Comment: Comment object (2)>
>>> Comment.objects.create(commentPost = Post.objects.get(id=2),commentUser = Author.objects.get(id=2).authorUser, text = 'second comment')
<Comment: Comment object (3)>
>>> Comment.objects.create(commentPost = Post.objects.get(id=2),commentUser = Author.objects.get(id=1).authorUser, text = 'second comment')
<Comment: Comment object (4)>
>>> Comment.objects.create(commentPost = Post.objects.get(id=3),commentUser = Author.objects.get(id=2).authorUser, text = 'third comment')
<Comment: Comment object (5)>
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=3).like()
>>> Post.objects.get(id=2).like()
>>> Post.objects.get(id=3).like()
>>> Post.objects.get(id=3).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=2).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=3).like()
>>> Comment.objects.get(id=4).like()
>>> Comment.objects.get(id=5).like()
>>> Comment.objects.get(id=5).like()
>>> Post.objects.get(id=1).rating
5
>>> Post.objects.get(id=2).rating
8
>>> Post.objects.get(id=3).rating
3
>>> Comment.objects.get(id=1).rating
3
>>> Comment.objects.get(id=2).rating
2
>>> Comment.objects.get(id=3).rating
6
>>> Comment.objects.get(id=4).rating
1
>>> Comment.objects.get(id=5).rating
2
>>> Post.objects.get(id=1).dislike()
>>> Post.objects.get(id=1).dislike()
>>> Post.objects.get(id=2).dislike()
>>> Post.objects.get(id=2).dislike()
>>> Post.objects.get(id=2).dislike()
>>> Post.objects.get(id=3).dislike()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=3).dislike()
>>> Comment.objects.get(id=3).dislike()
>>> Comment.objects.get(id=3).dislike()
>>> Comment.objects.get(id=5).dislike()
>>> Post.objects.get(id=1).rating
3
>>> Post.objects.get(id=2).rating
5
>>> Post.objects.get(id=3).rating
2
>>> Comment.objects.get(id=1).rating
2
>>> Comment.objects.get(id=2).rating
2
>>> Comment.objects.get(id=3).rating
3
>>> Comment.objects.get(id=4).rating
1
>>> Comment.objects.get(id=5).rating
1
>>> Author.objects.get(id=1).update_rating()
>>> Author.objects.get(id=2).update_rating()
>>> Author.objects.get(id=1).ratingAuthor
12
>>> Author.objects.get(id=2).ratingAuthor
27
>>> best = Author.objects.order_by('-ratingAuthor')[:1]
>>> best
<QuerySet [<Author: Author object (2)>]>
>>> for i in best:
...     i.ratingAuthor
...     i.authorUser.username
... 
27
'Vadim'
>>> Post.objects.get(id=1).rating
3
>>> Post.objects.get(id=2).rating
5
>>> Post.objects.get(id=3).rating
2
>>> article = Post.objects.filter(categoryType='AR').order_by('-rating')[:1]
>>> for i in article:
...     i.dateCreation.strftime("%d-%m-%Y")
...     i.author.authorUser.username
...     i.rating
...     i.title
...     i.preview()
...     best_ar_id = i.id
... 
'21-03-2022'
'Vadim'
5
'Something about IT in science'
'An article about something interesting...'
>>> comment = Comment.objects.filter(commentPost=best_ar_id)
>>> for i in comment:
...     i.dateCreation.strftime("%d-%m-%Y")
...     i.commentUser.username
...     i.rating
...     i.text
... 
'21-03-2022'
'Vadim'
3
'second comment'
'21-03-2022'
'Anton'
1
'second comment'